// Generated by view binder compiler. Do not edit!
package ph.edu.dlsu.mobdeve.s17.brillantes.aldecoa.mc03.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ph.edu.dlsu.mobdeve.s17.brillantes.aldecoa.mc03.R;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnGoToSignUp2;

  @NonNull
  public final Button btnReturnToLogIn;

  @NonNull
  public final EditText etSUConfirmPassword;

  @NonNull
  public final EditText etSUEmail;

  @NonNull
  public final EditText etSUPassword;

  private ActivitySignUpBinding(@NonNull LinearLayout rootView, @NonNull Button btnGoToSignUp2,
      @NonNull Button btnReturnToLogIn, @NonNull EditText etSUConfirmPassword,
      @NonNull EditText etSUEmail, @NonNull EditText etSUPassword) {
    this.rootView = rootView;
    this.btnGoToSignUp2 = btnGoToSignUp2;
    this.btnReturnToLogIn = btnReturnToLogIn;
    this.etSUConfirmPassword = etSUConfirmPassword;
    this.etSUEmail = etSUEmail;
    this.etSUPassword = etSUPassword;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_goToSignUp2;
      Button btnGoToSignUp2 = rootView.findViewById(id);
      if (btnGoToSignUp2 == null) {
        break missingId;
      }

      id = R.id.btn_returnToLogIn;
      Button btnReturnToLogIn = rootView.findViewById(id);
      if (btnReturnToLogIn == null) {
        break missingId;
      }

      id = R.id.et_SU_confirmPassword;
      EditText etSUConfirmPassword = rootView.findViewById(id);
      if (etSUConfirmPassword == null) {
        break missingId;
      }

      id = R.id.et_SU_email;
      EditText etSUEmail = rootView.findViewById(id);
      if (etSUEmail == null) {
        break missingId;
      }

      id = R.id.et_SU_password;
      EditText etSUPassword = rootView.findViewById(id);
      if (etSUPassword == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((LinearLayout) rootView, btnGoToSignUp2, btnReturnToLogIn,
          etSUConfirmPassword, etSUEmail, etSUPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
